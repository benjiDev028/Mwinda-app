import time
from sqlalchemy import create_engine
from sqlalchemy.exc import OperationalError
from app.db.base import Base
from app.db.session import engine

DATABASE_URL = "postgresql://mwinda:mwinda@postgres:5432/mwindaIdentity"

# Attendre que PostgreSQL soit pr√™t avant de se connecter
RETRY_COUNT = 10  # Nombre max de tentatives
SLEEP_TIME = 5    # Temps d'attente entre chaque tentative (en secondes)

for i in range(RETRY_COUNT):
    try:
        engine = create_engine(DATABASE_URL)
        conn = engine.connect()
        conn.close()
        print("‚úÖ Connexion √† PostgreSQL r√©ussie !")
        break  # Sortir de la boucle si la connexion r√©ussit
    except OperationalError:
        print(f"‚è≥ PostgreSQL n'est pas pr√™t... tentative {i+1}/{RETRY_COUNT}")
        time.sleep(SLEEP_TIME)
else:
    print("‚ùå Impossible de se connecter √† PostgreSQL apr√®s plusieurs tentatives.")
    exit(1)

# Si la connexion est r√©ussie, cr√©er les tables
print("üîß V√©rification et cr√©ation des tables...")
Base.metadata.create_all(engine)
print("‚úÖ Tables cr√©√©es avec succ√®s.")
